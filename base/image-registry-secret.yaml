#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:json", "json")
#@ load("@ytt:assert", "assert")
---
apiVersion: v1
kind: Secret
metadata:
  name: image-registry-credentials
type: kubernetes.io/dockerconfigjson
data:
  #@ data.values.registry.hostname or assert.fail("Expected non-empty data value registry.hostname")
  #@ data.values.registry.username or assert.fail("Expected non-empty data value registry.username")
  #@ data.values.registry.password or assert.fail("Expected non-empty data value registry.password")

  #@ docker_auth = base64.encode("{}:{}".format(data.values.registry.username, data.values.registry.password))
  #@ docker_creds = {"username": data.values.registry.username, "password": data.values.registry.password, "auth": docker_auth}
  .dockerconfigjson: #@ base64.encode(json.encode({"auths": {data.values.registry.hostname: docker_creds}}))