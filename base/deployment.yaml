
#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@ prefix = data.values.prefix or ""

#@ def selector_labels():
app: #@ prefix + data.values.app_name
#@ end 

#@overlay/match by=overlay.subset({"kind": "Deployment"}),expects="1+"
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ prefix + "spring-petclinic-deploy"
  labels: 
    deployment_label: #@ prefix + "deployment"
spec:
  replicas: #@ data.values.replicas
  selector:
    matchLabels: #@ selector_labels()
  template:
    metadata:
      labels: #@ selector_labels()
    spec:
      containers:  
      - name: spring-petclinic
        image: #@ data.values.image
        ports:
          - name: http
            containerPort: 8080        
        env:
        - name: VERSION
          value: "0.0"     
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP             
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: #@ prefix + "spring-petclinic-secret"
              key: db-password       
        envFrom: 
          - configMapRef: 
              name:  #@ prefix + "spring-petclinic-cm"
        #@ if data.values.env == "prod":
        #@overlay/append 
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 2        #! how many pods we can add at a time
            maxUnavailable: 0  #! maxUnavailable define how many pods can be unavailable  during the rolling update
        #@ end    